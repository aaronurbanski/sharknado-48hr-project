{"version":3,"sources":["components/Zomato.js","components/SetBackground.js","components/OpenWeather.js","components/Navtabs.js","components/BottomBar.js","App.js","reportWebVitals.js","index.js"],"names":["Zomato","props","useState","restaurants","obj","setObj","latitude","longitude","useEffect","url","fetch","headers","Headers","then","res","json","catch","err","console","log","map","array","index","restaurant","name","mapRestaurants","NasaBg","bg","setBg","style","backgroundImage","backgroundSize","height","OpenWeather","units","setUnits","main","temp","weather","results","setResults","far","cel","toFixed","src","icon","alt","description","Switch","checked","onChange","TabPanel","children","value","other","role","hidden","id","aria-labelledby","Box","p","Typography","a11yProps","LinkTab","Tab","component","onClick","event","preventDefault","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","NavTabs","classes","React","setValue","usePosition","location","setLocation","className","AppBar","position","Tabs","variant","newValue","aria-label","label","href","SetBackground","text","padding","spacing","textTransform","fontSize","paddingBottom","list","marginBottom","subheader","appBar","top","bottom","alignItems","grow","BottomAppBar","Fragment","CssBaseline","color","Toolbar","App","darkTheme","createMuiTheme","type","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be2d2caf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Zomato = (props) => {\n  const [obj, setObj] = useState({ restaurants: [] });\n  const { latitude, longitude } = props;\n  const apiKey = \"74410b44d09902e6ebbd8cccb5ffe7b8\";\n  useEffect(() => {\n//    console.log(latitude, longitude);\n    if (latitude && longitude) {\n      let url = `https://developers.zomato.com/api/v2.1/search?user-key=${apiKey}&lat=${latitude}&lon=${longitude}&sort=real_distance`;\n //     console.log(url);\n      fetch(url, {\n        headers: new Headers({\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"X-Zomato-API-Key\": \"74410b44d09902e6ebbd8cccb5ffe7b8\",\n        }),\n      })\n        .then((res) => res.json())\n        .then((json) => {\n  //        console.log(json);\n          setObj(json);\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [latitude, longitude]);\n  const mapRestaurants = (obj) => {\n    if (obj.restaurants) {\n      return obj.restaurants.map((array, index) => {\n        return <p key={index}>{array.restaurant.name}</p>;\n      });\n    }\n  };\n  return (\n    <div>\n      <h1>Restaurants</h1>\n      <div>{mapRestaurants(obj)}</div>\n    </div>\n  );\n};\n\nexport default Zomato;\n","import React, { useState, useEffect } from 'react';\nimport { usePosition } from \"use-position\";\n\n\nconst NasaBg = (props) => {\n    const [ bg, setBg ] = useState('');\n    const { latitude, longitude } = props;\n    const apiKey = \"Dj8U9a8JioutiPstpuNbidkgDxSidhRYfXJQNcUI\";\n    useEffect(() => {\n      console.log(latitude, longitude);\n      if (latitude && longitude) {\n        let url = `https://api.nasa.gov/planetary/earth/assets?lon=${longitude}&lat=${latitude}&date=2020-09-01&dim=0.2&api_key=${apiKey}`;\n        console.log(url);\n        fetch(url)\n          .then((res) => res.json())\n          .then((json) => {\n            console.log(json);\n            setBg(json.url);\n          })\n          .catch((err) => console.log(err));\n      }\n    }, [latitude, longitude]);\n    return (\n      <div>\n        <h1>Smile, you're on NASA cam...</h1>\n            <div style={{backgroundImage: `url(${bg})`, backgroundSize: 'cover', height: '100vh'}}>\n            </div>\n      </div>\n    );\n  };\n\n  \nexport default NasaBg;\n","import './OpenWeather.css';\nimport React, {useEffect, useState} from 'react';\nimport Switch from '@material-ui/core/Switch';\n\n//api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n\nconst OpenWeather = (props) => {\n  const [ units, setUnits ] = useState(\"F\");\n  const [results, setResults] = useState({main: {temp: \"\"}, weather: [\"\"]});\n  const { latitude, longitude } = props;\n\n  const handleChange = () => setUnits(units === \"F\"? \"C\" : \"F\") ;\n    const baseURL = 'https://api.openweathermap.org/data/2.5/weather';\n    const key = 'b7958e839f70944ee351c9725be8c02d';\n\n    useEffect(() => {\n      if (latitude && longitude) {\n\n      //  console.log(latitude, longitude);\n      \n      let url = `${baseURL}?lat=${latitude}&lon=${longitude}&appid=${key}&units=imperial`;\n    \n        fetch(url)\n          .then(res => res.json())\n          .then((json) => {\n            console.log(json);\n            setResults(json);\n          })       \n           .catch(err => console.log(err))\n    }\n    }, [latitude, longitude]);\n\n    let far = results.main.temp;\n    let cel = (results.main.temp - 32) * 5/9;\n\n\n      return(\n        <div>\n          <p>{units === \"F\" ? far : cel.toFixed(2)} {units}</p>\n      <p><img src={`https://openweathermap.org/img/wn/${results.weather[0].icon}.png`} alt=\"icon\" /><br/><span>{results.weather[0].description}</span></p>\n          <Switch\n            checked={units === \"F\" ? true : false}\n            onChange={handleChange}\n          />\n          <p>Celsius / Fahrenheit</p>\n        </div>\n\n      );\n};\n\nexport default OpenWeather;\n\n//example json result\n\n/* {\"coord\": { \"lon\": 139,\"lat\": 35},\n     \"weather\": [\n       {\n         \"id\": 800,\n         \"main\": \"Clear\",\n         \"description\": \"clear sky\",\n         \"icon\": \"01n\"\n       }\n     ],\n     \"base\": \"stations\",\n     \"main\": {\n       \"temp\": 281.52,\n       \"feels_like\": 278.99,\n       \"temp_min\": 280.15,\n       \"temp_max\": 283.71,\n       \"pressure\": 1016,\n       \"humidity\": 93\n     },\n     \"wind\": {\n       \"speed\": 0.47,\n       \"deg\": 107.538\n     },\n     \"clouds\": {\n       \"all\": 2\n     },\n     \"dt\": 1560350192,\n     \"sys\": {\n       \"type\": 3,\n       \"id\": 2019346,\n       \"message\": 0.0065,\n       \"country\": \"JP\",\n       \"sunrise\": 1560281377,\n       \"sunset\": 1560333478\n     },\n     \"timezone\": 32400,\n     \"id\": 1851632,\n     \"name\": \"Shuzenji\",\n     \"cod\": 200\n     } \n     \n           <div key={result.weather}>\n           <h2>{result.main}</h2>\n            {result.icon} \n            <p> {result.temp}</p>\n          <Switch inputProps={{ 'aria-label': 'primary checkbox' }} />\n      </div>\n     \n      \n     // const Switches = () => {\n      //  const [state, setState] = React.useState({\n    //      checkedA: true,\n     //     checkedB: true,\n     //   });\n  \n      \n     //   const handleChange = (event) => {\n     //     setState({ ...state, [event.target.name]: event.target.checked });\n      //  };\n      //      if ( switchB === true) {\n       //     } else {\n         //   };\n//double check switch syntax\n        //result. syntax may be an issue + result.icon will have type issues -> call another api?\n     \n     \n     */\n","import React, { useState, useEffect } from \"react\";\nimport { usePosition } from \"use-position\";\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport SatelliteIcon from '@material-ui/icons/Satellite';\nimport RestaurantIcon from '@material-ui/icons/Restaurant';\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\nimport Zomato from './Zomato';\nimport SetBackground from './SetBackground';\nimport OpenWeather from './OpenWeather';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={(event) => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function NavTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const { latitude, longitude } = usePosition();\n  const [location, setLocation] = useState({});\n  useEffect(() => {\n    setLocation({ latitude: latitude, longitude: longitude });\n  }, [latitude, longitude]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab icon={<SatelliteIcon />} label=\"NASA Image\" href=\"/drafts\" {...a11yProps(0)} />\n          <LinkTab icon={<RestaurantIcon />} label=\"Restaurants\" href=\"/trash\" {...a11yProps(1)} />\n          <LinkTab icon={<WbSunnyIcon />} label=\"Weather\" href=\"/spam\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <SetBackground latitude={location.latitude} longitude={location.longitude}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Zomato latitude={location.latitude} longitude={location.longitude} />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <OpenWeather latitude={location.latitude} longitude={location.longitude}/>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport GlobeIcon from '@material-ui/icons/Language';\nimport './BottomBar.css'\n\n\nconst useStyles = makeStyles((theme) => ({\n  text: {\n    padding: theme.spacing(1),\n    textTransform: 'uppercase',\n    fontSize: '.3em'\n  },\n  paper: {\n    paddingBottom: 50,\n  },\n  list: {\n    marginBottom: theme.spacing(2),\n  },\n  subheader: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  appBar: {\n    top: 'auto',\n    bottom: 0,\n    alignItems: 'center'\n  },\n  grow: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function BottomAppBar(props) {\n  const classes = useStyles();\n  const { latitude, longitude } = props;\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n        <Toolbar>\n          <div className={classes.grow} />\n         <Typography>\n         \n         <p><GlobeIcon /><br/><span>Longitude: {longitude} <br/> Latitude: {latitude}</span></p>\n         </Typography>\n        </Toolbar>\n      </AppBar>\n    </React.Fragment>\n  );\n}\n","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport { usePosition } from \"use-position\";\nimport 'fontsource-roboto';\nimport Navtabs from './components/Navtabs';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport BottomAppBar from './components/BottomBar';\n\nfunction App() {\n  const { latitude, longitude } = usePosition();\n  const [location, setLocation] = useState({});\n  const darkTheme = createMuiTheme( {\n    palette: {\n      type: 'dark',\n    }\n  });\n  useEffect(() => {\n    setLocation({ latitude: latitude, longitude: longitude });\n  }, [latitude, longitude]);\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={darkTheme}>\n      <Navtabs latitude={location.latitude} longitude={location.longitude}/>\n      <BottomAppBar latitude={location.latitude} longitude={location.longitude}/>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}